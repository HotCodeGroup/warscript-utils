// Code generated by protoc-gen-go. DO NOT EDIT.
// source: games.proto

package models

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GameSlug struct {
	Slug                 string   `protobuf:"bytes,1,opt,name=slug,proto3" json:"slug,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameSlug) Reset()         { *m = GameSlug{} }
func (m *GameSlug) String() string { return proto.CompactTextString(m) }
func (*GameSlug) ProtoMessage()    {}
func (*GameSlug) Descriptor() ([]byte, []int) {
	return fileDescriptor_games_df3cae509f3d5db6, []int{0}
}
func (m *GameSlug) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameSlug.Unmarshal(m, b)
}
func (m *GameSlug) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameSlug.Marshal(b, m, deterministic)
}
func (dst *GameSlug) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameSlug.Merge(dst, src)
}
func (m *GameSlug) XXX_Size() int {
	return xxx_messageInfo_GameSlug.Size(m)
}
func (m *GameSlug) XXX_DiscardUnknown() {
	xxx_messageInfo_GameSlug.DiscardUnknown(m)
}

var xxx_messageInfo_GameSlug proto.InternalMessageInfo

func (m *GameSlug) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

type InfoGame struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Slug                 string   `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Rules                string   `protobuf:"bytes,5,opt,name=rules,proto3" json:"rules,omitempty"`
	CodeExample          string   `protobuf:"bytes,6,opt,name=codeExample,proto3" json:"codeExample,omitempty"`
	BotCode              string   `protobuf:"bytes,7,opt,name=botCode,proto3" json:"botCode,omitempty"`
	LogoUUID             string   `protobuf:"bytes,8,opt,name=logoUUID,proto3" json:"logoUUID,omitempty"`
	BackgroundUUID       string   `protobuf:"bytes,9,opt,name=backgroundUUID,proto3" json:"backgroundUUID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InfoGame) Reset()         { *m = InfoGame{} }
func (m *InfoGame) String() string { return proto.CompactTextString(m) }
func (*InfoGame) ProtoMessage()    {}
func (*InfoGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_games_df3cae509f3d5db6, []int{1}
}
func (m *InfoGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InfoGame.Unmarshal(m, b)
}
func (m *InfoGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InfoGame.Marshal(b, m, deterministic)
}
func (dst *InfoGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InfoGame.Merge(dst, src)
}
func (m *InfoGame) XXX_Size() int {
	return xxx_messageInfo_InfoGame.Size(m)
}
func (m *InfoGame) XXX_DiscardUnknown() {
	xxx_messageInfo_InfoGame.DiscardUnknown(m)
}

var xxx_messageInfo_InfoGame proto.InternalMessageInfo

func (m *InfoGame) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *InfoGame) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *InfoGame) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *InfoGame) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *InfoGame) GetRules() string {
	if m != nil {
		return m.Rules
	}
	return ""
}

func (m *InfoGame) GetCodeExample() string {
	if m != nil {
		return m.CodeExample
	}
	return ""
}

func (m *InfoGame) GetBotCode() string {
	if m != nil {
		return m.BotCode
	}
	return ""
}

func (m *InfoGame) GetLogoUUID() string {
	if m != nil {
		return m.LogoUUID
	}
	return ""
}

func (m *InfoGame) GetBackgroundUUID() string {
	if m != nil {
		return m.BackgroundUUID
	}
	return ""
}

func init() {
	proto.RegisterType((*GameSlug)(nil), "models.GameSlug")
	proto.RegisterType((*InfoGame)(nil), "models.InfoGame")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GamesClient is the client API for Games service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GamesClient interface {
	GetGameBySlug(ctx context.Context, in *GameSlug, opts ...grpc.CallOption) (*InfoGame, error)
}

type gamesClient struct {
	cc *grpc.ClientConn
}

func NewGamesClient(cc *grpc.ClientConn) GamesClient {
	return &gamesClient{cc}
}

func (c *gamesClient) GetGameBySlug(ctx context.Context, in *GameSlug, opts ...grpc.CallOption) (*InfoGame, error) {
	out := new(InfoGame)
	err := c.cc.Invoke(ctx, "/models.Games/GetGameBySlug", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GamesServer is the server API for Games service.
type GamesServer interface {
	GetGameBySlug(context.Context, *GameSlug) (*InfoGame, error)
}

func RegisterGamesServer(s *grpc.Server, srv GamesServer) {
	s.RegisterService(&_Games_serviceDesc, srv)
}

func _Games_GetGameBySlug_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameSlug)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GamesServer).GetGameBySlug(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/models.Games/GetGameBySlug",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GamesServer).GetGameBySlug(ctx, req.(*GameSlug))
	}
	return interceptor(ctx, in, info, handler)
}

var _Games_serviceDesc = grpc.ServiceDesc{
	ServiceName: "models.Games",
	HandlerType: (*GamesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGameBySlug",
			Handler:    _Games_GetGameBySlug_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "games.proto",
}

func init() { proto.RegisterFile("games.proto", fileDescriptor_games_df3cae509f3d5db6) }

var fileDescriptor_games_df3cae509f3d5db6 = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x90, 0x3f, 0x6b, 0xc3, 0x30,
	0x10, 0xc5, 0x71, 0x12, 0x3b, 0xce, 0x85, 0x86, 0x72, 0x74, 0x10, 0x19, 0x4a, 0xc8, 0x50, 0x3a,
	0x79, 0x68, 0xd6, 0x4e, 0xfd, 0x43, 0xc8, 0x9a, 0x92, 0x0f, 0xe0, 0x3f, 0xaa, 0x31, 0x95, 0x7d,
	0xc6, 0x92, 0xa1, 0xfd, 0xee, 0x1d, 0x2a, 0x9d, 0xb0, 0x6b, 0x32, 0xf9, 0xde, 0xef, 0xdd, 0x33,
	0xa7, 0x07, 0xeb, 0x32, 0xad, 0xa5, 0x4e, 0xda, 0x8e, 0x0c, 0x61, 0x54, 0x53, 0x21, 0x95, 0xde,
	0xdf, 0x43, 0x7c, 0xb4, 0xf8, 0x43, 0xf5, 0x25, 0x22, 0x2c, 0xb4, 0xfd, 0x8a, 0x60, 0x17, 0x3c,
	0xae, 0xce, 0x3c, 0xef, 0x7f, 0x03, 0x88, 0x4f, 0xcd, 0x27, 0xb9, 0x25, 0xdc, 0xc0, 0xec, 0xf4,
	0xc6, 0xf6, 0xfc, 0x6c, 0xa7, 0x31, 0x30, 0xfb, 0x0f, 0xe0, 0x1d, 0x84, 0xa6, 0x32, 0x4a, 0x8a,
	0x39, 0x43, 0x2f, 0x70, 0x07, 0xeb, 0x42, 0xea, 0xbc, 0xab, 0x5a, 0x53, 0x51, 0x23, 0x16, 0xec,
	0x4d, 0x91, 0xcb, 0x75, 0xbd, 0x92, 0x5a, 0x84, 0x3e, 0xc7, 0xc2, 0xe5, 0x72, 0x7b, 0xe8, 0xfb,
	0x77, 0x5a, 0xb7, 0xf6, 0x9f, 0x91, 0xcf, 0x4d, 0x10, 0x0a, 0x58, 0x66, 0x64, 0x5e, 0x2d, 0x11,
	0x4b, 0x76, 0x07, 0x89, 0x5b, 0x88, 0x15, 0x95, 0x74, 0xb9, 0xd8, 0x9b, 0x63, 0xb6, 0x46, 0x8d,
	0x0f, 0xb0, 0xc9, 0xd2, 0xfc, 0xab, 0xec, 0xa8, 0x6f, 0x0a, 0xde, 0x58, 0xf1, 0xc6, 0x15, 0x7d,
	0x7a, 0x86, 0xd0, 0xbd, 0x5c, 0xe3, 0x01, 0x6e, 0x8e, 0xd2, 0xb8, 0xf9, 0xe5, 0x87, 0xcb, 0xba,
	0x4d, 0x7c, 0x83, 0xc9, 0x50, 0xdf, 0x76, 0x24, 0x43, 0x5f, 0x59, 0xc4, 0x5d, 0x1f, 0xfe, 0x02,
	0x00, 0x00, 0xff, 0xff, 0xf8, 0x10, 0xc2, 0x5f, 0x7a, 0x01, 0x00, 0x00,
}
